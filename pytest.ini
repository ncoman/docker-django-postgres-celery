# -- FILE: pytest.ini (or tox.ini)
# https://readthedocs.org/projects/pytest-django/downloads/pdf/stable/
[pytest]
env_override_existing_values = 1
env_files =
    envs/local/django
    envs/local/postgres

;DJANGO_SETTINGS_MODULE: This is where we tell pytest to run with a specific settings.
DJANGO_SETTINGS_MODULE = telecine.settings

# -- recommended but optional:
;python_paths: The dot meaning that the current directory will be added to the PYTHONPATH env var.
python_files = tests.py test_*.py *_tests.py


addopts =
    #--reuse-db
    #-x: This option tells pytest to stop after the first test fail, is great when we are having problems with several
    # tests so in this way we can solve this problems one by one.
    -x
    #-v: To tell pytest to be a little bit more verbose
    -v
    #--nomigrations: Disable the migrations when run pytest this could make the setup for testing faster.
    -p no:warnings
    --nomigrations
    # --cov=.: When pytest runs it makes a coverage report.
    --cov=.
    # --no-cov-on-fail: Don't show the coverage report if a test fails.
    --no-cov-on-fail

    --cov-report term
;    --cov-report html:htmlcov
    #--cov-report xml:cov.xml
    # This value should be ratcheted up overtime as we get better coverage
    # Set at it's lowest point to prevent regressions 68
    --cov-fail-under=20

    # Target:
    # --cov-fail-under=75

    #--nf: Tells pytest to run the "new tests" first
    #--ff: Tells pytest to run the "fail tests" first.
    #--lf: Tells pytest to run the only the "last fail".

log_cli = 1
log_cli_level = DEBUG
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format=%Y-%m-%d %H:%M:%S
